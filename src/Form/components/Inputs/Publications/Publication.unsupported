/**
 * Created by nicolas.looschen@pikobytes.de on 9/15/21.
 *
 * This file is subject to the terms and conditions defined in
 * file 'LICENSE.txt', which is part of this source code package.
 */

import React, { useRef, useState } from 'react';
import {
  createStyles,
  Grid,
  IconButton,
  makeStyles,
  TextField,
  Theme,
  Tooltip,
} from '@material-ui/core';
import clsx from 'clsx';
import { RemoveCircle } from '@material-ui/icons';
import { useRecoilValue } from 'recoil';

import { translationFunctionState } from '../../../../structs/atoms';
import { generateTranslate } from '../../../../util/translation';
import { PUBLICATIONS_FIELD_SPACE } from './Publications.unsupported';

const useStyles = makeStyles((theme: Theme) =>
  createStyles({
    publicationTextInputCollapsed: {
      textOverflow: 'ellipsis',
      whiteSpace: 'nowrap',
      overflow: 'hidden',
    },
  })
);

interface PublicationProps {
  index: number;
  onRemove: (index: number) => void;
  onUpdate: (updatedPublication: string, index: number) => void;
  publication: string;
  variant?: 'standard' | 'filled' | 'outlined';
}

export const Publication = (props: PublicationProps) => {
  // props
  const { index, onRemove, onUpdate, publication, variant } = props;

  // state
  const classes = useStyles();
  const [expanded, setExpanded] = useState(false);
  const inputRef = useRef<HTMLInputElement>(null);
  const t = useRecoilValue(translationFunctionState);
  const [value, setValue] = useState(publication);

  const translate = generateTranslate(t);

  //
  // Label section
  //

  const removeButtonTooltip = translate(
    `${PUBLICATIONS_FIELD_SPACE}.RemoveButton.tooltip`
  );

  //
  // Handler section
  //

  const handleBlur = () => {
    onUpdate(value, index);
    setExpanded(false);
  };

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setValue(e.target.value);
  };

  const handleFocus = () => {
    setExpanded(true);
  };

  const handleRemoveButtonClick = () => {
    onRemove(index);
  };

  return (
    <Grid item xs={12}>
      <Grid alignItems="center" container spacing={1}>
        <Grid item xs>
          <TextField
            inputProps={{
              className: clsx(
                !expanded && classes.publicationTextInputCollapsed
              ),
              ref: inputRef,
            }}
            fullWidth
            multiline
            onBlur={handleBlur}
            onChange={handleChange}
            onFocus={handleFocus}
            rows={expanded ? 7 : 1}
            variant={variant}
            value={value}
          />
        </Grid>
        <Grid item xs="auto">
          <Tooltip title={removeButtonTooltip}>
            <IconButton className="button" onClick={handleRemoveButtonClick}>
              <RemoveCircle />
            </IconButton>
          </Tooltip>
        </Grid>
      </Grid>
    </Grid>
  );
};

export default Publication;
